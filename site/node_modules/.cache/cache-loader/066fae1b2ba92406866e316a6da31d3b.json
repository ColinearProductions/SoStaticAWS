{"remainingRequest":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\src\\components\\TinyComponents\\CreateWebsiteDialog.vue","dependencies":[{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\src\\components\\TinyComponents\\CreateWebsiteDialog.vue","mtime":1535271697188},{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\package.json","mtime":1535811265818},{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1524914320675},{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nexport default {\n  name: \"CreateWebsiteDialog\",\n  data: function data() {\n    return {\n      website: {\n        alias: '',\n        url: '',\n        httpsOnly: true,\n        recaptcha: false,\n        sitekey: '',\n        secret: '',\n        contacts: {\n          alias: '',\n          email: ''\n        },\n        forms: [],\n        messages: []\n      },\n      formValidModel: false,\n      display: false\n    };\n  },\n  methods: {\n    onConfirmClicked: function onConfirmClicked() {\n      this.$refs.form.validate();\n\n      if (this.formValidModel) {\n        this.website.contacts = [this.website.contacts];\n        this.$store.dispatch(\"createWebsite\", this.website);\n      }\n    },\n    onClose: function onClose() {\n      this.$store.commit(\"setCreateWebsiteDialogVisibility\", false);\n      this.website = {\n        alias: '',\n        url: '',\n        httpsOnly: true,\n        recaptcha: false,\n        sitekey: '',\n        secret: '',\n        contacts: {\n          alias: '',\n          email: ''\n        },\n        forms: [],\n        messages: []\n      };\n      this.formValidModel = false;\n    },\n    //RULES\n    min3: function min3(v) {\n      if (v === undefined) return true;\n      return v.length >= 3 || 'Field must have more than 3 characters';\n    },\n    email: function email(value) {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if (value.length < 1) return true;\n      return re.test(value.toLowerCase()) || 'Email invalid';\n    },\n    listOfLinks: function listOfLinks(value) {\n      var urls = value.split(',');\n      var valid = true;\n\n      for (var idx in urls) {\n        var url = urls[idx].trim();\n        if (url.length < 1) continue;\n        if (url === 'localhost' || url === '127.0.0.1') valid = valid && true;else {\n          var urlValid = /^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\\.[a-zA-Z]{2,})+$/.test(url);\n          if (!urlValid) return url + ' is not a valid domain name';\n          valid = valid && urlValid;\n        }\n      }\n\n      return valid || 'Not all urls are valid';\n    },\n    requiredIf: function requiredIf(value) {\n      if (this.website.recaptcha) return !(value === undefined || value === null || value === '') || \"This field is required\";else return true;\n    }\n  },\n  watch: {\n    // Because the dialog will modify the value of it's v-model on close, you need to make a proxy for the state\n    // in VUEX store. Otherwise it will try to chanFge the value there and it will fail. This way\n    // The display variable is the proxy, when visible (from store) changes, the local display value is updated\n    // and applied to the dialog, when display (local) changes, the vuex store is notified and updated accordingly\n    'visible': function visible() {\n      this.display = this.visible;\n    },\n    'display': function display() {\n      this.$store.commit('setCreateWebsiteDialogVisibility', this.display);\n    }\n  },\n  computed: {\n    visible: function visible() {\n      return this.$store.getters.getIsCreateWebsiteDialogVisible;\n    }\n  }\n};",{"version":3,"sources":["CreateWebsiteDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;QAGA;wBACA;;;eAGA;aACA;mBACA;mBACA;iBACA;gBACA;;iBAEA;iBACA,AACA;AAHA;eAIA;kBACA,AACA;AAbA;sBAcA;eACA,AACA;AAjBA;AAkBA;;kDAGA;sBACA;;+BAEA;8CACA;mDAEA;AAEA;AACA;gCACA;6DACA;;eAEA;aACA;mBACA;mBACA;iBACA;gBACA;;iBAEA;iBACA,AACA;AAHA;eAIA;kBACA,AACA;AAbA;4BAeA;AACA;AACA;2BACA;gBACA,kBACA;8BACA;AACA;iCACA;eAEA;yBACA,UAEA;6CACA;AACA;6CACA;6BACA;kBACA;;4BACA;4BACA;yBACA,GACA;2CACA,8BACA,UACA;8FACA;eACA,uBACA;2BAEA;AACA;AACA;;sBACA;AACA;2CACA;uBACA,8EACA,AACA,qCACA;AAEA,AACA;AAvEA;;AAyEA;AACA;AACA;AACA;kCACA;0BAEA;AACA;kCACA;kEAEA;AACA,AACA;AAbA;;gCAeA;iCACA;AACA,AACA;AAJA;AA7GA","file":"CreateWebsiteDialog.vue","sourceRoot":"src\\components\\TinyComponents","sourcesContent":["<template>\r\n    <v-dialog v-model=\"display\" width=\"800px\">\r\n        <v-card>\r\n\r\n            <v-layout row justify-center>\r\n                <v-flex xl10 md10 xs12 class=\"pa-2\">\r\n                    <v-card-title class=\"pb-0\">\r\n                        <div style=\"width:100%; text-align:left\">\r\n                            <span class=\"headline deep-purple--text bold\">Create Website</span><br>\r\n                        </div>\r\n\r\n                        <div style=\"width:100%; text-align:left\">\r\n                            <span class=\"body-1 grey--text text--lighten-1\">   Information about this website</span><br>\r\n\r\n                        </div>\r\n\r\n\r\n                    </v-card-title>\r\n\r\n                    <v-card-text class=\"pa-4\">\r\n                        <v-form v-model=\"formValidModel\" ref=\"form\" @submit.prevent=\"\">\r\n\r\n                        <v-text-field\r\n                                prepend-icon=\"assignment\"\r\n                                label=\"Website Name\"\r\n                                v-model=\"website.alias\"\r\n                                :rules=\"[min3]\" required\r\n                        ></v-text-field>\r\n                        <v-text-field\r\n                                prepend-icon=\"assignment\"\r\n                                label=\"Website Urls (Separated by commas)\"\r\n                                v-model=\"website.url\"\r\n                                :rules=\"[min3, listOfLinks]\" required=\"\"\r\n                        ></v-text-field>\r\n\r\n\r\n                        <span class=\"body-1 grey--text text--lighten-1\"> Where should the message be forwarded to? (you can add more later)</span><br>\r\n                        <v-layout row wrap>\r\n                            <v-flex xs5 class=\"pa-2\">\r\n                                <v-text-field\r\n\r\n                                        label=\"Alias\"\r\n                                        v-model=\"website.contacts.alias\"\r\n                                        :rules=\"[min3]\"\r\n                                ></v-text-field>\r\n                            </v-flex>\r\n\r\n                            <v-flex xs7 class=\"pa-2\">\r\n                                <v-text-field\r\n\r\n                                        label=\"Email\"\r\n                                        v-model=\"website.contacts.email\"\r\n                                        :rules=\"[email, min3]\"\r\n                                ></v-text-field>\r\n                            </v-flex>\r\n\r\n\r\n                        </v-layout>\r\n\r\n                        <v-checkbox label=\"HTTPs Only\" v-model=\"website.httpsOnly\"></v-checkbox>\r\n\r\n                        <v-switch label=\"Use ReCAPTCHA\" v-model=\"website.recaptcha\"></v-switch>\r\n\r\n                        <div v-bind:class=\"{hidden:!website.recaptcha}\">\r\n\r\n                            <v-text-field\r\n                                    prepend-icon=\"assignment\"\r\n                                    label=\"Site key\"\r\n                                    v-model=\"website.sitekey\"\r\n                                    :rules=\"[requiredIf]\"\r\n                            ></v-text-field>\r\n                            <v-text-field\r\n                                    prepend-icon=\"assignment\"\r\n                                    label=\"Secret\"\r\n                                    v-model=\"website.secret\"\r\n                                    :rules=\"[requiredIf]\"\r\n                            ></v-text-field>\r\n\r\n\r\n                        </div>\r\n\r\n                    </v-form>\r\n                    </v-card-text>\r\n                </v-flex>\r\n            </v-layout>\r\n\r\n            <v-divider></v-divider>\r\n            <v-card-actions>\r\n                <v-btn flat color=\"primary\" v-on:click=\"onClose\">Cancel</v-btn>\r\n\r\n                <v-spacer></v-spacer>\r\n                <v-btn flat color=\"primary\" v-on:click=\"onConfirmClicked\">Create</v-btn>\r\n\r\n            </v-card-actions>\r\n        </v-card>\r\n\r\n    </v-dialog>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\n    /* eslint-disable */\r\n    export default {\r\n        name: \"CreateWebsiteDialog\",\r\n\r\n        data: function () {\r\n            return {\r\n                website: {\r\n                    alias: '',\r\n                    url: '',\r\n                    httpsOnly: true,\r\n                    recaptcha: false,\r\n                    sitekey: '',\r\n                    secret: '',\r\n                    contacts: {\r\n                        alias: '',\r\n                        email: ''\r\n                    },\r\n                    forms: [],\r\n                    messages: [],\r\n                },\r\n                formValidModel:false,\r\n                display:false\r\n            }\r\n        },\r\n        methods: {\r\n            onConfirmClicked: function () {\r\n\r\n                this.$refs.form.validate();\r\n                if(this.formValidModel) {\r\n\r\n                    this.website.contacts = [this.website.contacts];\r\n                    this.$store.dispatch(\"createWebsite\", this.website);\r\n\r\n                }\r\n\r\n            },\r\n            onClose: function () {\r\n                this.$store.commit(\"setCreateWebsiteDialogVisibility\",false);\r\n                this.website =  {\r\n                    alias: '',\r\n                    url: '',\r\n                    httpsOnly: true,\r\n                    recaptcha: false,\r\n                    sitekey: '',\r\n                    secret: '',\r\n                    contacts: {\r\n                        alias: '',\r\n                        email: ''\r\n                    },\r\n                    forms: [],\r\n                    messages: [],\r\n                };\r\n                this.formValidModel=false;\r\n\r\n            },\r\n            //RULES\r\n            min3: v=> {\r\n                if(v===undefined)\r\n                    return true;\r\n                return v.length >= 3 || 'Field must have more than 3 characters'\r\n            },\r\n            email: function(value) {\r\n                let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n                if(value.length<1)\r\n                    return true;\r\n\r\n                return re.test(value.toLowerCase()) || 'Email invalid'\r\n            },\r\n            listOfLinks: function(value){\r\n                let urls = value.split(',');\r\n                let valid = true;\r\n                for(let idx in urls){\r\n                    let url = urls[idx].trim();\r\n                    if(url.length<1)\r\n                        continue;\r\n                    if(url==='localhost' || url==='127.0.0.1')\r\n                        valid = valid && true;\r\n                    else{\r\n                        let urlValid = /^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\\.[a-zA-Z]{2,})+$/.test(url);\r\n                        if(!urlValid)\r\n                            return url+' is not a valid domain name';\r\n                        valid = valid && urlValid;\r\n\r\n                    }\r\n                }\r\n                return valid || 'Not all urls are valid'\r\n            },\r\n            requiredIf: function(value){\r\n                if(this.website.recaptcha)\r\n                    return !(value===undefined || value === null || value==='') || \"This field is required\";\r\n                else\r\n                    return true;\r\n            }\r\n\r\n        },\r\n        watch:{\r\n            // Because the dialog will modify the value of it's v-model on close, you need to make a proxy for the state\r\n            // in VUEX store. Otherwise it will try to chanFge the value there and it will fail. This way\r\n            // The display variable is the proxy, when visible (from store) changes, the local display value is updated\r\n            // and applied to the dialog, when display (local) changes, the vuex store is notified and updated accordingly\r\n            'visible': function () {\r\n                this.display = this.visible;\r\n\r\n            },\r\n            'display':function(){\r\n                this.$store.commit('setCreateWebsiteDialogVisibility',this.display)\r\n\r\n            }\r\n        },\r\n        computed:{\r\n            visible(){\r\n                return this.$store.getters.getIsCreateWebsiteDialogVisible;\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .bold {\r\n        font-weight: bold;\r\n    }\r\n\r\n    .hidden {\r\n        display: none\r\n    }\r\n\r\n</style>"]}]}