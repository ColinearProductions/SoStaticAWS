{"remainingRequest":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\src\\components\\FormCard.vue","dependencies":[{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\src\\components\\FormCard.vue","mtime":1537705464596},{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\package.json","mtime":1535811265818},{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1524914320675},{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueSoStatic\\vue-SoStatic\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nvar pathToFunction = \"https://sostatic.xyz/api/\";\nexport default {\n  name: \"FormCard\",\n  props: ['form'],\n  data: function data() {\n    return {\n      dialog: {\n        visible: false\n      }\n    };\n  },\n  computed: {\n    messagesProgress: function messagesProgress() {\n      return this.form.message_count / 300 * 100;\n    },\n    formAddedOn: function formAddedOn() {\n      return moment(this.form.added_on).format(\"YYYY-MM-DD HH:mm\");\n    },\n    shortEndpoint: function shortEndpoint() {\n      return pathToFunction + this.form.endpoint;\n    },\n    recaptchaScriptRefString: function recaptchaScriptRefString() {\n      return \"<script src=\\\"https://www.google.com/recaptcha/api.js\\\" async defer><script>\";\n    },\n    currentWebsite: function currentWebsite() {\n      return this.$store.getters.currentWebsite;\n    },\n    sourceCode: function sourceCode() {\n      var url = pathToFunction + this.form.endpoint;\n      var recaptchaSiteKey = '';\n      var recaptchaCode = '';\n\n      if (this.form.recaptcha) {\n        recaptchaSiteKey = this.currentWebsite.sitekey;\n        recaptchaCode = \"<div class=\\\"g-recaptcha\\\" data-sitekey=\\\"\".concat(recaptchaSiteKey, \"\\\"></div>\");\n      }\n\n      return \"<form action=\\\"\".concat(url, \" \\\" method=\\\"POST\\\">\\n    <label for=\\\"name\\\">Name</label>\\n    <input type=\\\"text\\\" name=\\\"name\\\">\\n    <label for=\\\"email\\\">Email  </label>\\n    <input type=\\\"text\\\" name=\\\"email\\\">\\n    <label for=\\\"message\\\"> Message </label>\\n    <textarea name=\\\"message\\\" placeholder=\\\"Your message\\\"></textarea>\\n    \").concat(recaptchaCode, \"\\n    <input type=\\\"submit\\\" value=\\\"Submit\\\">\\n</form>\");\n    }\n  },\n  methods: {\n    editForm: function editForm() {\n      this.$emit('onEditFormClicked', this.form);\n    },\n    onEndpointClicked: function onEndpointClicked() {\n      this.$store.commit(\"showSnackbar\", \"Endpoint copied to clipboard\");\n      this.copyToClipboard(pathToFunction + this.form.endpoint);\n    },\n    onGenerateBoilerplateClicked: function onGenerateBoilerplateClicked() {\n      this.dialog.visible = true;\n    },\n    onCopyRecaptchaRefClicked: function onCopyRecaptchaRefClicked() {\n      this.$store.commit(\"showSnackbar\", \"Recaptcha reference copied to clipboard\");\n      this.copyToClipboard(this.recaptchaScriptRefString);\n    },\n    onCopyFormCodeClicked: function onCopyFormCodeClicked() {\n      this.$store.commit(\"showSnackbar\", \"Boilerplate code copied to clipboard\");\n      this.copyToClipboard(this.sourceCode);\n    },\n    copyToClipboard: function copyToClipboard(text) {\n      var el = document.createElement('textarea');\n      el.value = text;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n    }\n  }\n};",{"version":3,"sources":["FormCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;mBAEA;qBAEA;;QAEA;UACA;wBACA;;;iBAGA,AAEA,AACA;AAJA;AADA;AAMA;;kDAEA;6CACA;AACA;wCACA;+CACA;AACA;4CACA;wCACA;AACA;kEACA;AAEA;AACA;8CACA;iCACA;AACA;sCACA;2CAEA;6BACA;0BAEA;;+BACA;+CACA;4EACA;AAEA;;sCACA,AACA,AACA,AACA,AACA,AACA,AACA,oUACA,AACA,AACA;AACA,AACA;AAvCA;;kCAyCA;2CACA;AACA;oDACA;yCACA;sDACA;AACA;0EACA;4BACA;AACA;oEACA;yCAEA;gCACA;AACA;4DACA;yCAEA;gCACA;AACA;oDACA;sCACA;iBACA;gCACA;SACA;2BACA;gCAEA;AACA,AACA;AA9BA;AAnDA","file":"FormCard.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n    <v-flex xs12 sm6 md6 lg4 class=\"pa-2\">\r\n\r\n\r\n\r\n        <v-dialog v-model=\"dialog.visible\" width=\"60%\" max-width=\"1000px\">\r\n\r\n\r\n            <v-card class=\" grey lighten-5 pl-4 pt-4 pr-4\">\r\n\r\n\r\n                <pre v-highlightjs=\"recaptchaScriptRefString\" v-if=\"this.form.recaptcha\"><code class=\"html subheading font-weight-regular\"></code></pre>\r\n\r\n                <v-card-actions v-if=\"this.form.recaptcha\">\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn flat color=\"primary\" @click=\"onCopyRecaptchaRefClicked\">Copy</v-btn>\r\n\r\n                </v-card-actions>\r\n\r\n                <pre v-highlightjs=\"sourceCode\"><code class=\"html subheading font-weight-regular\"></code></pre>\r\n\r\n                <v-card-actions>\r\n                    <v-btn flat color=\"primary\" @click=\"dialog.visible = false\">Close</v-btn>\r\n\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn flat color=\"primary\" @click=\"onCopyFormCodeClicked\">Copy</v-btn>\r\n\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n\r\n\r\n        <v-card>\r\n            <v-card-title class=\"pb-0\">\r\n                <div>\r\n                    <span class=\"headline deep-purple--text bold\">{{form.alias}}</span><br>\r\n                    <span class=\"body-1 grey--text text--lighten-1 \">Added on {{formAddedOn}}</span><br>\r\n                </div>\r\n\r\n\r\n            </v-card-title>\r\n\r\n            <v-card-text class=\"pa-4\">\r\n\r\n\r\n                <p class=\"deep-purple--text bold mb-1\">\r\n                    Messages {{form.message_count}}/300\r\n                </p>\r\n                <v-progress-linear v-bind:value=\"messagesProgress\" height=\"3\" class=\"mt-1\"></v-progress-linear>\r\n\r\n                <p class=\"deep-purple--text bold mb-2\">\r\n                    ReCAPTCHA\r\n                    <br>\r\n                    <small v-bind:class=\"{ 'red--text': !form.recaptcha, 'green--text':form.recaptcha}\">\r\n                        {{form.recaptcha?'Enabled':'Disabled'}}\r\n                    </small>\r\n\r\n                <p class=\"deep-purple--text bold mb-1\">\r\n                    <v-icon class=\"deep-purple--text\">http</v-icon>\r\n                    Endpoint:\r\n                </p>\r\n\r\n                <p @click=\"onEndpointClicked\" class=\"deep-purple--text text-lighten-2 deep-purple lighten-5 pa-2 \"\r\n                   style=\"cursor: pointer;width:100%\">\r\n                    <span class=\"caption\">{{shortEndpoint}}</span>\r\n                </p>\r\n\r\n                <a class=\"deep-purple--text bold\" v-on:click=\"onGenerateBoilerplateClicked\">\r\n                    Generate form boilerplate\r\n                </a>\r\n\r\n\r\n            </v-card-text>\r\n\r\n            <v-divider></v-divider>\r\n            <v-card-actions>\r\n                <v-btn flat color=\"primary\" @click=\"editForm\">Edit</v-btn>\r\n\r\n            </v-card-actions>\r\n        </v-card>\r\n\r\n    </v-flex>\r\n\r\n</template>\r\n\r\n<script>\r\n    import moment from 'moment'\r\n\r\n    const pathToFunction = \"https://sostatic.xyz/api/\";\r\n\r\n    export default {\r\n        name: \"FormCard\",\r\n        props: ['form'],\r\n        data: function () {\r\n            return {\r\n                dialog: {\r\n                    visible: false\r\n                }\r\n\r\n            }\r\n        },\r\n        computed: {\r\n            messagesProgress: function () {\r\n                return (this.form.message_count / 300) * 100;\r\n            },\r\n            formAddedOn: function () {\r\n                return moment(this.form.added_on).format(\"YYYY-MM-DD HH:mm\");\r\n            },\r\n            shortEndpoint: function () {\r\n                return pathToFunction + this.form.endpoint\r\n            },\r\n            recaptchaScriptRefString: function () {\r\n                return `<script src=\"https://www.google.com/recaptcha/api.js\" async defer><script>`;\r\n\r\n            },\r\n            currentWebsite: function () {\r\n                return this.$store.getters.currentWebsite;\r\n            },\r\n            sourceCode: function () {\r\n                let url =pathToFunction + this.form.endpoint;\r\n\r\n                let recaptchaSiteKey='';\r\n                let recaptchaCode='';\r\n\r\n                if(this.form.recaptcha) {\r\n                    recaptchaSiteKey = this.currentWebsite.sitekey;\r\n                    recaptchaCode = `<div class=\"g-recaptcha\" data-sitekey=\"${recaptchaSiteKey}\"></div>`;\r\n                }\r\n\r\n                return `<form action=\"${ url } \" method=\"POST\">\r\n    <label for=\"name\">Name</label>\r\n    <input type=\"text\" name=\"name\">\r\n    <label for=\"email\">Email  </label>\r\n    <input type=\"text\" name=\"email\">\r\n    <label for=\"message\"> Message </label>\r\n    <textarea name=\"message\" placeholder=\"Your message\"></textarea>\r\n    ${recaptchaCode}\r\n    <input type=\"submit\" value=\"Submit\">\r\n</form>`;\r\n            }\r\n        },\r\n        methods: {\r\n            editForm: function () {\r\n                this.$emit('onEditFormClicked', this.form);\r\n            },\r\n            onEndpointClicked: function () {\r\n                this.$store.commit(\"showSnackbar\", \"Endpoint copied to clipboard\");\r\n                this.copyToClipboard(pathToFunction + this.form.endpoint);\r\n            },\r\n            onGenerateBoilerplateClicked: function () {\r\n                this.dialog.visible = true;\r\n            },\r\n            onCopyRecaptchaRefClicked: function(){\r\n                this.$store.commit(\"showSnackbar\", \"Recaptcha reference copied to clipboard\");\r\n\r\n                this.copyToClipboard(this.recaptchaScriptRefString);\r\n            },\r\n            onCopyFormCodeClicked: function(){\r\n                this.$store.commit(\"showSnackbar\", \"Boilerplate code copied to clipboard\");\r\n\r\n                this.copyToClipboard(this.sourceCode);\r\n            },\r\n            copyToClipboard(text){\r\n                const el = document.createElement('textarea');\r\n                el.value = text;\r\n                document.body.appendChild(el);\r\n                el.select();\r\n                document.execCommand('copy');\r\n                document.body.removeChild(el);\r\n\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .bold {\r\n        font-weight: bold;\r\n    }\r\n\r\n\r\n</style>"]}]}