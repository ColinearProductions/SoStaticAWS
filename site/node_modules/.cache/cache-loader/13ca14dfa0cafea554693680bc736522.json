{"remainingRequest":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueTutorial\\vue-skills\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueTutorial\\vue-skills\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueTutorial\\vue-skills\\src\\components\\Forms.vue","dependencies":[{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueTutorial\\vue-skills\\src\\components\\Forms.vue","mtime":1528627673964},{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueTutorial\\vue-skills\\package.json","mtime":1525629842569},{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueTutorial\\vue-skills\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1524914320676},{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueTutorial\\vue-skills\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\Colinear\\Dropbox\\Workspace\\Web\\VueTutorial\\vue-skills\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport FormCard from \"./FormCard\";\nexport default {\n  name: \"Forms\",\n  components: {\n    FormCard: FormCard\n  },\n  data: function data() {\n    return {\n      dialogModel: {\n        visible: false,\n        title: '',\n        useRecaptcha: false,\n        aliasField: \"\",\n        confirmButton: \"Create\",\n        update: false,\n        formToBeUpdatedId: ''\n      }\n    };\n  },\n  methods: {\n    onAddFormConfirm: function onAddFormConfirm() {\n      if (this.dialogModel.update) {\n        this.$store.dispatch('updateForm', {\n          alias: this.dialogModel.aliasField,\n          recaptcha: this.dialogModel.useRecaptcha,\n          form_id: this.dialogModel.formToBeUpdatedId\n        });\n      } else {\n        this.$store.dispatch('addFormToWebsite', {\n          alias: this.dialogModel.aliasField,\n          recaptcha: this.dialogModel.useRecaptcha\n        });\n      }\n\n      this.dialogModel.visible = false;\n    },\n    onCreateFormClicked: function onCreateFormClicked() {\n      this.dialogModel = {\n        visible: true,\n        useRecaptcha: false,\n        title: \"Add form to \" + this.currentWebsite.alias,\n        confirmButton: \"Create\",\n        aliasField: \"\",\n        update: false,\n        formToBeUpdatedIdId: ''\n      };\n    },\n    onEditFormClicked: function onEditFormClicked(form) {\n      console.log(\",,,,,,,,,\", form);\n      this.dialogModel = {\n        visible: true,\n        useRecaptcha: form.recaptcha,\n        title: \"Update form \" + form.alias,\n        confirmButton: \"Confirm\",\n        aliasField: form.alias,\n        update: true,\n        formToBeUpdatedId: form\n      };\n    }\n  },\n  computed: {\n    currentWebsite: function currentWebsite() {\n      return this.$store.getters.currentWebsite;\n    }\n  }\n};",{"version":3,"sources":["Forms.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AAGA;QAEA;;AACA;;wBACA;;;iBAGA;eACA;sBACA;oBACA;uBACA;gBACA;2BACA,AACA,AACA;AATA;AADA;AAWA;;kDAEA;mCACA;6BACA;kCAEA;sCACA;oCACA,AACA,AAEA;AANA;aAOA;6BACA;kCAEA;sCACA,AACA,AAEA;AALA;AAMA;;iCACA;AACA;wDAEA;;iBAEA;sBACA;oDACA;uBACA;oBACA;gBACA;6BACA,AACA;AARA;AASA;wDACA;+BACA;;iBAEA;2BACA;qCACA;uBACA;yBACA;gBACA;2BACA,AACA;AARA;AASA,AACA;AA9CA;;8CAgDA;iCACA;AACA,AAGA;AANA;AA/DA","file":"Forms.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n\r\n\r\n    <v-layout row wrap>\r\n\r\n        <FormCard v-for=\"form in currentWebsite.forms\" :key=\"form.key\" v-bind:form=\"form\"\r\n                  v-on:onEditFormClicked=\"onEditFormClicked\"></FormCard>\r\n\r\n        <v-btn fab bottom right color=\"primary\" dark fixed @click=\"onCreateFormClicked\">\r\n            <v-icon>add</v-icon>\r\n        </v-btn>\r\n\r\n        <v-dialog v-model=\"dialogModel.visible\" width=\"800px\">\r\n            <v-card>\r\n                <v-card-title class=\"grey lighten-4 py-4 title deep-purple--text\">\r\n                    {{dialogModel.title}}\r\n                </v-card-title>\r\n                <v-container grid-list-sm class=\"pa-5\">\r\n                    <v-layout row wrap>\r\n                        <v-flex xs12>\r\n                            <v-text-field\r\n                                    prepend-icon=\"assignment\"\r\n                                    label=\"Form alias\" v-model=\"dialogModel.aliasField\"\r\n                            ></v-text-field>\r\n                        </v-flex>\r\n                        <v-flex xs12>\r\n                            <v-switch label=\"Use ReCAPTCHA\" :disabled=\"!currentWebsite.recaptcha\"\r\n                                      v-model=\"dialogModel.useRecaptcha\"\r\n                            ></v-switch>\r\n                        </v-flex>\r\n\r\n\r\n                    </v-layout>\r\n                </v-container>\r\n                <v-card-actions>\r\n\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn flat color=\"primary\" @click=\"dialogModel.visible = false\">Cancel</v-btn>\r\n                    <v-btn flat color=\"primary\" @click=\"onAddFormConfirm()\" v-text=\"dialogModel.confirmButton\">Create\r\n                    </v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-dialog>\r\n\r\n    </v-layout>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n    import FormCard from \"./FormCard\";\r\n\r\n\r\n    export default {\r\n        name: \"Forms\",\r\n        components: {FormCard},\r\n        data: function () {\r\n            return {\r\n                dialogModel: {\r\n                    visible: false,\r\n                    title: '',\r\n                    useRecaptcha: false,\r\n                    aliasField: \"\",\r\n                    confirmButton: \"Create\",\r\n                    update: false,\r\n                    formToBeUpdatedId: ''\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            onAddFormConfirm: function () {\r\n                if (this.dialogModel.update) {\r\n                    this.$store.dispatch('updateForm',\r\n                        {\r\n                            alias: this.dialogModel.aliasField,\r\n                            recaptcha: this.dialogModel.useRecaptcha,\r\n                            form_id: this.dialogModel.formToBeUpdatedId\r\n                        }\r\n                    );\r\n\r\n                } else {\r\n                    this.$store.dispatch('addFormToWebsite',\r\n                        {\r\n                            alias: this.dialogModel.aliasField,\r\n                            recaptcha: this.dialogModel.useRecaptcha\r\n                        }\r\n                    );\r\n\r\n                }\r\n                this.dialogModel.visible = false;\r\n            },\r\n            onCreateFormClicked: function () {\r\n\r\n                this.dialogModel = {\r\n                    visible: true,\r\n                    useRecaptcha: false,\r\n                    title: \"Add form to \" + this.currentWebsite.alias,\r\n                    confirmButton: \"Create\",\r\n                    aliasField: \"\",\r\n                    update: false,\r\n                    formToBeUpdatedIdId: ''\r\n                }\r\n            },\r\n            onEditFormClicked: function (form) {\r\n                console.log(\",,,,,,,,,\", form);\r\n                this.dialogModel = {\r\n                    visible: true,\r\n                    useRecaptcha: form.recaptcha,\r\n                    title: \"Update form \" + form.alias,\r\n                    confirmButton: \"Confirm\",\r\n                    aliasField: form.alias,\r\n                    update: true,\r\n                    formToBeUpdatedId: form\r\n                }\r\n            }\r\n        },\r\n        computed: {\r\n            currentWebsite: function () {\r\n                return this.$store.getters.currentWebsite;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    @import \"https://cdn.jsdelivr.net/npm/animate.css@3.5.1\";\r\n\r\n    .bold {\r\n        font-weight: bold !important;\r\n    }\r\n\r\n\r\n</style>"]}]}