{"remainingRequest":"C:\\Users\\Razvan\\Dropbox\\SoStaticAWS\\site\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Razvan\\Dropbox\\SoStaticAWS\\site\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\Razvan\\Dropbox\\SoStaticAWS\\site\\src\\components\\Settings.vue","dependencies":[{"path":"C:\\Users\\Razvan\\Dropbox\\SoStaticAWS\\site\\src\\components\\Settings.vue","mtime":1535821289900},{"path":"C:\\Users\\Razvan\\Dropbox\\SoStaticAWS\\site\\package.json","mtime":1552761763060},{"path":"C:\\Users\\Razvan\\Dropbox\\SoStaticAWS\\site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1524914320676},{"path":"C:\\Users\\Razvan\\Dropbox\\SoStaticAWS\\site\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\Razvan\\Dropbox\\SoStaticAWS\\site\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import _typeof from \"C:\\\\Users\\\\Razvan\\\\Dropbox\\\\SoStaticAWS\\\\site\\\\node_modules\\\\@babel\\\\runtime/helpers/typeof\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nexport default {\n  name: \"Settings\",\n  data: function data() {\n    return {\n      websiteDetailsModel: {},\n      websiteModelChangePending: false,\n      formValidModel: false\n    };\n  },\n  methods: {\n    addContact: function addContact() {\n      this.websiteDetailsModel.contacts.push({\n        alias: \"\",\n        email: \"\"\n      });\n      this.onWebsiteModelChanged();\n    },\n    onWebsiteModelChanged: function onWebsiteModelChanged() {\n      this.$refs.form.validate();\n      console.log(\"ON Detail Model Changed\");\n      var props = ['alias', 'httpsOnly', 'recaptcha', 'secret', 'sitekey', 'url', 'contacts'];\n      var isChanged = !isEquivalent(this.websiteDetailsModel, this.$store.getters.currentWebsite, props, ['alias', 'email']);\n      this.websiteModelChangePending = isChanged;\n      this.$store.commit(\"setPendingModification\", isChanged);\n    },\n    onSavePressed: function onSavePressed() {\n      this.$refs.form.validate();\n      if (this.formValidModel) this.$store.dispatch(\"updateWebsite\", this.websiteDetailsModel);\n    },\n    removeContact: function removeContact(index) {\n      this.websiteDetailsModel.contacts.splice(index, 1);\n      this.onWebsiteModelChanged();\n    },\n    //RULES\n    min3: function min3(v) {\n      if (v === undefined) return true;\n      return v.length >= 3 || 'Field must have more than 3 characters';\n    },\n    listOfLinks: function listOfLinks(value) {\n      if (value === undefined) return true;\n      var urls = value.split(',');\n      var valid = true;\n\n      for (var idx in urls) {\n        var url = urls[idx].trim();\n        if (url.length < 1) continue;\n        if (url === 'localhost' || url === '127.0.0.1') valid = valid && true;else {\n          var urlValid = /^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\\.[a-zA-Z]{2,})+$/.test(url);\n          if (!urlValid) return url + ' is not a valid domain name';\n          valid = valid && urlValid;\n        }\n      }\n\n      return valid || 'Not all urls are valid';\n    },\n    email: function email(value) {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if (value === undefined) return true;\n      if (value.length < 1) return true;\n      return re.test(value.toLowerCase()) || 'Email invalid';\n    },\n    requiredIf: function requiredIf(value) {\n      if (this.websiteDetailsModel.recaptcha) return !(value === undefined || value === null || value === '') || \"This field is required\";else return true;\n    } //RULES,\n\n  },\n  watch: {\n    'isWebsiteChangePending': function isWebsiteChangePending() {\n      this.websiteModelChangePending = this.isWebsiteChangePending;\n    },\n    'currentWebsite': function currentWebsite() {\n      this.websiteDetailsModel = this.$store.getters.currentWebsiteClone;\n      this.$refs.form.validate();\n      this.websiteModelChangePending = false;\n      this.$store.commit(\"setPendingModification\", false);\n    }\n  },\n  computed: {\n    isWebsiteChangePending: function isWebsiteChangePending() {\n      return this.$store.getters.getPendingModification;\n    },\n    currentWebsite: function currentWebsite() {\n      return this.$store.getters.currentWebsite;\n    },\n    currentWebsiteClone: function currentWebsiteClone() {\n      return JSON.parse(JSON.stringify(this.$store.getters.currentWebsiteClone));\n    }\n  },\n  beforeMount: function beforeMount() {\n    this.websiteDetailsModel = this.$store.getters.currentWebsiteClone;\n  }\n  /* eslint-disable */\n\n};\n\nfunction isEquivalent(a, b, props, subprops) {\n  // Create arrays of property names\n  var aProps = props;\n\n  var _loop = function _loop(i) {\n    var propName = aProps[i]; // If values of same property are not equal,\n    // objects are not equivalent\n\n    if (Array.isArray(a[propName])) {\n      if (a[propName].length !== b[propName].length) {\n        console.log(\"Not equivalent because\", propName, 'has a different length');\n        return {\n          v: false\n        };\n      }\n\n      var _loop2 = function _loop2(_i) {\n        var result = true;\n        subprops.forEach(function (subprop) {\n          if (a[propName][_i][subprop] !== b[propName][_i][subprop]) {\n            console.log(\"Not equivalent because\", propName, '[', _i, ']', a[propName][_i][subprop], b[propName][_i][subprop]);\n            result = result && false;\n          }\n        });\n        if (result === false) return {\n          v: {\n            v: false\n          }\n        };\n      };\n\n      for (var _i = 0; _i < a[propName].length; _i++) {\n        var _ret2 = _loop2(_i);\n\n        if (_typeof(_ret2) === \"object\") return _ret2.v;\n      }\n    } else if (a[propName] !== b[propName]) {\n      console.log(\"Not equivalent because\", propName, a[propName], b[propName]);\n      return {\n        v: false\n      };\n    }\n  };\n\n  for (var i = 0; i < aProps.length; i++) {\n    var _ret = _loop(i);\n\n    if (_typeof(_ret) === \"object\") return _ret.v;\n  } // If we made it this far, objects\n  // are considered equivalent\n\n\n  return true;\n}",{"version":3,"sources":["Settings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;AAEA;QAEA;wBACA;;2BAGA;iCACA;sBAEA,AACA;AALA;AAMA;;sCAGA;;;eACA;;WACA;AACA;4DACA;sBACA;kBACA;kFACA;mHAEA;uCACA;mDAEA;AACA;4CACA;sBAEA;eACA,2DAGA;AACA;iDACA;sDACA;WACA;AACA;AACA;2BACA;gBACA,kBACA;8BACA;AACA;6CACA;oBACA,kBACA;6BACA;kBACA;;4BACA;4BACA;yBACA,GACA;2CACA,8BACA,UACA;8FACA;eACA,uBACA;2BAEA;AACA;AACA;;sBACA;AACA;iCACA;eAEA;oBACA,kBAEA;yBACA,UAEA;6CACA;AACA;2CACA;mCACA,8EACA,AACA,qCACA;AACA,MAGA,AACA;;AA3EA;;gEA6EA;4CACA;AACA;gDACA;qDACA;sBACA;uCACA;mDAEA;AACA,AACA;AAXA;;8DAaA;iCACA;AACA;8CACA;iCACA;AACA;wDACA;2DACA;AACA,AACA;AAVA;sCAWA;mDAEA;AAEA;AAEA;;AApHA;;AAsHA;AAEA;eAEA;;AAHA;0BAMA,IACA;AAEA;;;qDAGA;wDACA;;aACA;;AACA;;AAJA;qBAMA;4CACA;qEACA;oHACA;+BACA;AACA;AAEA;uBACA;;eAEA;;;;;;AAXA;;;AAaA;4CACA;qEACA;;WACA;;AACA;;;;AA7BA;;;AA+BA,IACA;AACA;;;SACA","file":"Settings.vue","sourceRoot":"src\\components","sourcesContent":["\r\n<template>\r\n    <v-container grid-list-md text-xs-center>\r\n        <v-layout row wrap justify-center>\r\n            <v-flex xl8 md10 xs12 class=\"pa-2\">\r\n                <v-card>\r\n\r\n                    <v-layout row justify-center>\r\n                        <v-flex xl10 md10 xs12 class=\"pa-2\">\r\n\r\n\r\n\r\n                            <v-card-text class=\"pa-4\">\r\n\r\n                                <v-form v-model=\"formValidModel\" ref=\"form\" @submit.prevent=\"\">\r\n\r\n                                    <div style=\"width:100%; text-align:left\">\r\n                                        <span class=\"display-1 deep-purple--text bold\">Website details</span><br>\r\n                                    </div>\r\n                                    <v-divider class=\" mb-2\"></v-divider >\r\n                                    <div style=\"width:100%; text-align:left\" class=\"mb-4\">\r\n                                        <span class=\"body-1 grey--text text--lighten-1\">   Information about this website</span><br>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <v-text-field\r\n                                            prepend-icon=\"assignment\"\r\n                                            label=\"Website Name\"\r\n                                            v-model=\"websiteDetailsModel.alias\"\r\n                                            v-on:keyup=\"onWebsiteModelChanged\"\r\n                                            :rules=\"[min3]\" required\r\n                                    ></v-text-field>\r\n                                    <v-text-field\r\n                                            prepend-icon=\"assignment\"\r\n                                            label=\"Website Urls (Separated by commas)\"\r\n                                            v-model=\"websiteDetailsModel.url\"\r\n                                            v-on:keyup=\"onWebsiteModelChanged\"\r\n                                            :rules=\"[min3, listOfLinks]\" required=\"\"\r\n\r\n                                    ></v-text-field>\r\n\r\n\r\n                                    <v-checkbox label=\"HTTPs Only\" v-model=\"websiteDetailsModel.httpsOnly\"\r\n                                                v-on:change=\"onWebsiteModelChanged\"\r\n                                    ></v-checkbox>\r\n\r\n                                    <v-switch label=\"Use ReCAPTCHA\" v-model=\"websiteDetailsModel.recaptcha\"\r\n                                              v-on:change=\"onWebsiteModelChanged\"\r\n                                    ></v-switch>\r\n\r\n                                    <div v-bind:class=\"{hidden:!websiteDetailsModel.recaptcha}\">\r\n\r\n                                        <v-text-field\r\n                                                prepend-icon=\"assignment\"\r\n                                                label=\"Site key\"\r\n                                                v-model=\"websiteDetailsModel.sitekey\"\r\n                                                :rules=\"[requiredIf]\"\r\n                                                v-on:keyup=\"onWebsiteModelChanged\"\r\n                                        ></v-text-field>\r\n                                        <v-text-field\r\n                                                prepend-icon=\"assignment\"\r\n                                                label=\"Secret\"\r\n                                                :rules=\"[requiredIf]\"\r\n                                                v-model=\"websiteDetailsModel.secret\"\r\n                                                v-on:keyup=\"onWebsiteModelChanged\"\r\n\r\n                                        ></v-text-field>\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <div style=\"width:100%; text-align:left\" class=\"mt-4\">\r\n                                        <span class=\"display-1 deep-purple--text bold\">Contacts</span><br>\r\n                                    </div>\r\n                                    <v-divider class=\" mb-2\"></v-divider >\r\n\r\n                                    <div style=\"width:100%; text-align:left\" class=\"pb-3\">\r\n                                        <span class=\"body-1 grey--text text--lighten-1\">Enter email addresses where you want the messages to be forwarded to</span><br>\r\n\r\n                                    </div>\r\n                                    <v-layout row wrap v-for=\"(contact,index) in websiteDetailsModel.contacts\"\r\n                                              :key=\"index\">\r\n                                        <v-flex xs5 class=\"pa-2\">\r\n                                            <v-text-field\r\n\r\n                                                    label=\"Alias\"\r\n                                                    v-model=\"contact.alias\"\r\n                                                    v-on:keyup=\"onWebsiteModelChanged\"\r\n                                                    :rules=\"[min3]\"\r\n                                            ></v-text-field>\r\n                                        </v-flex>\r\n\r\n                                        <v-flex xs6 class=\"pa-2\">\r\n                                            <v-text-field\r\n\r\n                                                    label=\"Email\"\r\n                                                    v-model=\"contact.email\" :rules=\"[email, min3]\"\r\n                                                    v-on:keyup=\"onWebsiteModelChanged\"\r\n                                            ></v-text-field>\r\n                                        </v-flex>\r\n\r\n                                        <v-flex xs1 class=\"pt-3\">\r\n                                            <v-btn color=\"primary lighten-1\" fab small  dark v-on:click=\"removeContact(index)\"  v-if=\"index!==0\">\r\n                                                <v-icon>delete_outline</v-icon>\r\n                                            </v-btn>\r\n                                        </v-flex>\r\n\r\n\r\n                                    </v-layout>\r\n                                    <v-layout row wrap>\r\n                                        <v-flex xs12>\r\n\r\n                                            <v-btn right flat color=\"primary\" v-on:click=\"addContact\"\r\n                                                   v-bind:disabled=\"websiteDetailsModel.contacts.length>=5\">Add more\r\n                                            </v-btn>\r\n                                        </v-flex>\r\n                                    </v-layout>\r\n\r\n                                </v-form>\r\n                            </v-card-text>\r\n\r\n                        </v-flex>\r\n                    </v-layout>\r\n\r\n                    <v-divider></v-divider>\r\n                    <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn flat color=\"primary\" v-bind:disabled=\"!websiteModelChangePending\" @click=\"onSavePressed\">\r\n                            Save\r\n                        </v-btn>\r\n\r\n                    </v-card-actions>\r\n                </v-card>\r\n\r\n            </v-flex>\r\n\r\n\r\n\r\n        </v-layout>\r\n    </v-container>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n    /* eslint-disable */\r\n\r\n    export default {\r\n        name: \"Settings\",\r\n        data: function () {\r\n            return {\r\n\r\n                websiteDetailsModel: {},\r\n                websiteModelChangePending: false,\r\n                formValidModel:false,\r\n\r\n            }\r\n        },\r\n        methods: {\r\n            addContact: function () {\r\n\r\n                this.websiteDetailsModel.contacts.push({alias: \"\", email: \"\"});\r\n                this.onWebsiteModelChanged();\r\n            },\r\n            onWebsiteModelChanged: function () {\r\n                this.$refs.form.validate();\r\n                console.log(\"ON Detail Model Changed\");\r\n                let props = ['alias', 'httpsOnly', 'recaptcha', 'secret', 'sitekey', 'url', 'contacts'];\r\n                let isChanged = !isEquivalent(this.websiteDetailsModel, this.$store.getters.currentWebsite, props,['alias','email']);\r\n\r\n                this.websiteModelChangePending = isChanged;\r\n                this.$store.commit(\"setPendingModification\", isChanged);\r\n\r\n            },\r\n            onSavePressed: function () {\r\n                this.$refs.form.validate();\r\n\r\n                if(this.formValidModel)\r\n                    this.$store.dispatch(\"updateWebsite\", this.websiteDetailsModel);\r\n\r\n\r\n            },\r\n            removeContact: function(index){\r\n              this.websiteDetailsModel.contacts.splice(index,1);\r\n              this.onWebsiteModelChanged();\r\n            },\r\n            //RULES\r\n            min3: v=> {\r\n                if(v===undefined)\r\n                    return true;\r\n                return v.length >= 3 || 'Field must have more than 3 characters'\r\n            },\r\n            listOfLinks: function(value){\r\n                if(value===undefined)\r\n                    return true;\r\n                let urls = value.split(',');\r\n                let valid = true;\r\n                for(let idx in urls){\r\n                    let url = urls[idx].trim();\r\n                    if(url.length<1)\r\n                        continue;\r\n                    if(url==='localhost' || url==='127.0.0.1')\r\n                        valid = valid && true;\r\n                    else{\r\n                        let urlValid = /^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9](?:\\.[a-zA-Z]{2,})+$/.test(url);\r\n                        if(!urlValid)\r\n                            return url+' is not a valid domain name';\r\n                        valid = valid && urlValid;\r\n\r\n                    }\r\n                }\r\n                return valid || 'Not all urls are valid'\r\n            },\r\n            email: function(value) {\r\n                let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n                if(value===undefined)\r\n                    return true;\r\n\r\n                if(value.length<1)\r\n                    return true;\r\n\r\n                return re.test(value.toLowerCase()) || 'Email invalid'\r\n            },\r\n            requiredIf: function(value){\r\n                if(this.websiteDetailsModel.recaptcha)\r\n                    return !(value===undefined || value === null || value==='') || \"This field is required\";\r\n                else\r\n                    return true;\r\n            }\r\n            //RULES,\r\n\r\n\r\n        },\r\n        watch: {\r\n            'isWebsiteChangePending': function () {\r\n                this.websiteModelChangePending = this.isWebsiteChangePending\r\n            },\r\n            'currentWebsite': function(){\r\n                this.websiteDetailsModel =  this.$store.getters.currentWebsiteClone;\r\n                this.$refs.form.validate();\r\n                this.websiteModelChangePending = false;\r\n                this.$store.commit(\"setPendingModification\", false);\r\n\r\n            }\r\n        },\r\n        computed: {\r\n            isWebsiteChangePending() {\r\n                return this.$store.getters.getPendingModification;\r\n            },\r\n            currentWebsite(){\r\n                return this.$store.getters.currentWebsite;\r\n            },\r\n            currentWebsiteClone(){\r\n                return  JSON.parse(JSON.stringify( this.$store.getters.currentWebsiteClone));\r\n            }\r\n        },\r\n        beforeMount: function () {\r\n            this.websiteDetailsModel = this.$store.getters.currentWebsiteClone;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /* eslint-disable */\r\n\r\n    function isEquivalent(a, b, props, subprops) {\r\n        // Create arrays of property names\r\n        let aProps = props;\r\n\r\n        for (let i = 0; i < aProps.length; i++) {\r\n            let propName = aProps[i];\r\n\r\n            // If values of same property are not equal,\r\n            // objects are not equivalent\r\n\r\n            if(Array.isArray(a[propName])){\r\n\r\n                if(a[propName].length !== b[propName].length){\r\n                    console.log(\"Not equivalent because\", propName, 'has a different length');\r\n                    return false;\r\n                }\r\n                for(let i=0;i<a[propName].length;i++){\r\n                    let result = true;\r\n                    subprops.forEach((subprop)=>{\r\n                        if(a[propName][i][subprop]!==b[propName][i][subprop]){\r\n                            console.log(\"Not equivalent because\", propName,'[',i,']',a[propName][i][subprop],b[propName][i][subprop] );\r\n                            result=result && false;\r\n                        }\r\n                    });\r\n\r\n                    if(result===false)\r\n                        return false;\r\n\r\n                }\r\n\r\n            }else if (a[propName] !== b[propName]) {\r\n                console.log(\"Not equivalent because\", propName, a[propName], b[propName]);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // If we made it this far, objects\r\n        // are considered equivalent\r\n        return true;\r\n    }\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n    .bold {\r\n        font-weight: bold;\r\n    }\r\n\r\n    .hidden {\r\n        display: none\r\n    }\r\n\r\n\r\n</style>"]}]}